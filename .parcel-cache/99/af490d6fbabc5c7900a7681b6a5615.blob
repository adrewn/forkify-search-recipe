var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _viewJs = require("./View.js");
var _viewJsDefault = parcelHelpers.interopDefault(_viewJs);
var _iconsSvg = require("url:../../img/icons.svg");
var _iconsSvgDefault = parcelHelpers.interopDefault(_iconsSvg);
class paginationView extends _viewJsDefault.default {
    _parentElement = document.querySelector('.pagination');
    _generateMarkup() {
        console.log(this._data.results);
        const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);
        // page 1, there are other pages
        if (this._data.page === 1 && numPages > 1) return `\n          <button class="btn--inline pagination__btn--next">\n            <span>Page ${this._data.page + 1}</span>\n            <svg class="search__icon">\n              <use href="${_iconsSvgDefault.default}#icon-arrow-right"></use>\n            </svg>\n          </button>`;
        // page 1, there are no other pages
        // lastpage
        if (this._data.page === numPages && numPages > 1) return `<button class="btn--inline pagination__btn--prev">\n            <svg class="search__icon">\n              <use href="${_iconsSvgDefault.default}#icon-arrow-left"></use>\n            </svg>\n            <span>Page ${this.data.page - 1}</span>\n          </button>`;
        // other pages
        if (this._data.page < numPages) return `<button class="btn--inline pagination__btn--prev">\n            <svg class="search__icon">\n              <use href="src/img/icons.svg#icon-arrow-left"></use>\n            </svg>\n            <span>Page ${this._data.page - 1}</span>\n          </button>\n          <button class="btn--inline pagination__btn--next">\n          <span>Page ${this._data.page + 1}</span>\n          <svg class="search__icon">\n            <use href="src/img/icons.svg#icon-arrow-right"></use>\n          </svg>\n        </button>\n          `;
        return ``;
    }
}
exports.default = new paginationView();
