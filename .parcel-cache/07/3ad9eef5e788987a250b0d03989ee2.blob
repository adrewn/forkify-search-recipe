import   "a2b9b486472d1022aac7bf610e8d3c3c:url:../../img/icons.svg";
class $a2b9b486472d1022aac7bf610e8d3c3c$export$9099ad97b570f7c {
    _data;
    render(data) {
        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
        this._data = data;
        const markup = this._generateMarkup();
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    update(data) {
        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
        this._data = data;
        const newMarkup = this._generateMarkup();
        const newDOM = document.createRange().createContextualFragment(newMarkup);
        const newElements = Array.from(newDOM.querySelectorAll('*'));
        const curElements = Array.from(this._parentElement.querySelectorAll('*'));
        newElements.forEach((newEl, i)=>{
            const curEl = curElements[i];
            if (!newEl.isEqualNode(curEl) && newEl.firstChild?.nodeValue.trim() !== '') curEl.textContent = newEl.textContent;
            if (!newEl.isEqualNode(curEl)) Array.from(newEl.attributes).forEach((attr)=>curEl.setAttribute(attr.name, attr.value)
            );
        });
    }
    _clear() {
        this._parentElement.innerHTML = '';
    }
    renderSpinner = function() {
        const markup = `<div class="spinner">\n      <svg>\n        <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-loader"></use>\n      </svg>\n    </div>`;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    };
    renderError(message = this._errorMEssage) {
        const markup = `<div class="error">\n        <div>\n          <svg>\n            <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-alert-triangle"></use>\n          </svg>\n        </div>\n        <p>${message}</p>\n      </div>`;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    renderMessage(message = this._message) {
        const markup = `<div class="message">\n        <div>\n          <svg>\n            <use href="${icon}#icon-smile"></use>\n          </svg>\n        </div>\n        <p>${message}</p>\n      </div>\n  `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    _generateMarkup() {
        return `<figure class="recipe__fig">\n      <img src="${this._data.image}" alt="${this._data.title}" class="recipe__img" />\n      <h1 class="recipe__title">\n        <span>${this._data.title}</span>\n      </h1>\n    </figure>\n  \n    <div class="recipe__details">\n      <div class="recipe__info">\n        <svg class="recipe__info-icon">\n          <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-clock"></use>\n        </svg>\n        <span class="recipe__info-data recipe__info-data--minutes">${this._data.cookingTime}</span>\n        <span class="recipe__info-text">minutes</span>\n      </div>\n      <div class="recipe__info">\n        <svg class="recipe__info-icon">\n          <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-users"></use>\n        </svg>\n        <span class="recipe__info-data recipe__info-data--people">${this._data.servings}</span>\n        <span class="recipe__info-text">servings</span>\n  \n        <div class="recipe__info-buttons">\n          <button class="btn--tiny btn--update-servings" data-update-to='${this._data.servings - 1}'>\n            <svg>\n              <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-minus-circle"></use>\n            </svg>\n          </button>\n          <button class="btn--tiny btn--update-servings" data-update-to='${this._data.servings + 1}'>\n            <svg>\n              <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-plus-circle"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n  \n      \n    </div>\n  \n    <div class="recipe__ingredients">\n      <h2 class="heading--2">Recipe ingredients</h2>\n      <ul class="recipe__ingredient-list">\n       \n       ${this._data.ingredients.map(this._generateMarkupIngredient).join('')}\n  \n      </ul>\n    </div>\n  \n    <div class="recipe__directions">\n      <h2 class="heading--2">How to cook it</h2>\n      <p class="recipe__directions-text">\n        This recipe was carefully designed and tested by\n        <span class="recipe__publisher">${this._data.publisher}</span>. Please check out\n        directions at their website.\n      </p>\n      <a\n        class="btn--small recipe__btn"\n        href="${this._data.sourceUrl}"\n        target="_blank"\n      >\n        <span>Directions</span>\n        <svg class="search__icon">\n          <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-arrow-right"></use>\n        </svg>\n      </a>\n    </div>`;
    }
}
